- @title = "#{@lesson.title} - #{@lesson.subject} > #{@lesson.specific_subject}"
- @description = truncate(@lesson.body, :length => 300)

%p
  = @lesson.subject
  - if @lesson.specific_subject.present?
    \>
    = @lesson.specific_subject

.lesson
  %p.right= link_to('Edit lesson >', edit_lesson_path(@lesson)) if lesson_owner?(@lesson)
  %h2= @lesson.title

  .lesson_info
    .right
      = render "lessons/status"

    %b Created by:
    %span.normal= link_to_unless(@lesson.user.nil?, lesson_owner(@lesson), profile_path(@lesson.user))

    %div{:style => "margin-top: 12px;"}
      %b Confidence Level:
      = @lesson.confidence_text

  .photos_and_videos.right    
    - if @lesson.videos.empty? && @lesson.photos.empty?
      %p No videos or images have been added to this lesson.
      - if lesson_owner?(@lesson)
        %p= link_to("Edit your lesson to add a video >", edit_lesson_path(@lesson))
        %p= link_to("Edit your lesson to add a photo/image/drawing >", edit_lesson_path(@lesson))

    - @lesson.media.each do |media|
      - if media.is_a?(Video)
        .video
          %p.small.right= link_to("View&nbsp;larger&nbsp;video&nbsp;>".html_safe, lesson_video_path(@lesson, media), :class => "lightbox")
          %h4
            = truncate(media.title, :length => 39)
          = render "videos/video", :video => media, :size => :medium
          .small= simple_format(media.caption)
      - else
        .photo
          %h4= media.title
          = link_to(image_tag(media.image.url), lesson_photo_path(@lesson, media), :class => "lightbox")
          .small= simple_format(media.caption)

  .lesson_text
    = simple_format(@lesson.body).html_safe


  .references
    %h3 Reference Material
    %p The following sources were helpful when I was learning this material.
    - if @lesson.references.empty?
      No references were used in learning the material.
    - else
      %ul
        - @lesson.references.each do |reference|
          %li
            = link_to_unless(reference.url.blank?, reference.title, reference.url, :target => "_blank")
            .small= simple_format(reference.comment)
    - if lesson_owner?(@lesson)
      %p= link_to("Add reference material for your lesson >", new_lesson_reference_path(@lesson), :class => "lightbox")

  .lesson_links
    - linked_lessons = @lesson.lesson_links.with_published_linked_lesson
    - if (previous_lessons = linked_lessons.previous.map(&:linked_lesson)).present?
      %h3 View These Lessons First
      %p You may want to check out these lessons before you go through this lesson:
      %ul
        - previous_lessons.each do |lesson|
          %li= link_to(lesson.title, lesson_path(lesson))

    - if (next_lessons = linked_lessons.next.map(&:linked_lesson)).present?
      - if previous_lessons.present? 
        %br

      %h3 View These Lessons Next
      %p You may want to check out these lessons after you go through this lesson:
      %ul
        - next_lessons.each do |lesson|
          %li= link_to(lesson.title, lesson_path(lesson))

    - if lesson_owner?(@lesson)
      %p= link_to("Add lesson links your lesson >", new_lesson_lesson_link_path(@lesson), :class => "lightbox")

  .comments
    %h3 Comments On This Lesson
    - @lesson.comments.each do |comment|
      .comment
        = simple_format(comment.text)
        .small= "- from #{link_to(comment.user.display_name, profile_path(comment.user))}".html_safe
    = render "comments/form"
