= form_for(@lesson) do |f|
  - if @lesson.errors.any?
    #error_explanation
      %h2
        = pluralize(@lesson.errors.count, "error")
        prohibited this lesson from being saved:
      %ul
        - @lesson.errors.full_messages.each do |msg|
          %li= msg

  - if @lesson.subject.blank? || @lesson.title.blank? || params.include?(:edit_title)
    .right.example_lesson_info
      %h3 Lesson Info
      %p You can create a lesson for anything.
      %p Some examples:

      %ul
        %li
          %b General Subject
          %br
          Specific Subject > Title
        %li
          %b Math
          %br
          Algebra > Solving a simple equation
        %li
          %b Cooking
          %br
          Frying an egg > How to flip the egg
        %li
          %b English
          %br
          Grammar > How to use commas
        %li
          %b Sports
          %br
          Baseball > How to throw a curveball



    .field
      %h3 Lesson Info
      .small (don't worry too much about this, just try to fill everything in)

      %br
        
      %p
        = f.label :subject, "What subject or skill are you trying to learn / teach?"
      %p
        = f.label :subject, "General Subject:"
        = f.text_field :subject, "data-hint" => 'e.g. "Math" or "Cooking"'
      %p
        = f.label :specific_subject, "Specific Subject:"
        = f.text_field :specific_subject, "data-hint" => 'e.g. "Algebra" or "Frying An Egg"'

      %br

      %p
        = f.label :subject, "What do you want to title your lesson?"
      %p
        = f.label :title, "Title:"
        = f.text_field :title, "data-hint" => 'e.g. "How to flip the egg"'


    .clear
    .right.example_lesson_info
      %h3 Confidence Level
      %p
        Novices and experts are all welcome.
      %p.small (we actually prefer to get lessons from people who are just starting out, but we appreciate experts as well)
      %p Just try to be honest about your skill level so others will know what to expect. 

    .field
      %h3 Confidence Level
      %p= f.label :confidence_score, "How confident are you at this subject / skill?"
      %p= f.select :confidence_score, Lesson::CONFIDENCE_SCORES

  - else
    .right
      .photos_and_videos_preview
        - unless @lesson.media.empty?
          .section
            %h3 Media
            - @lesson.media.each do |media|
              - if media.is_a?(Video)
                - video = media
                .video_thumbnail
                  - if video.youtube_id.index('docs.google')
                    %div{:style => "float: left; margin-right: 12px;"}
                      != video.google_frame(180, 120)
                  - else
                    - if video.created_at > 30.minutes.ago
                      %p.small.text_center
                        It may take up to an hour for YouTube to process your video.
                    = link_to(image_tag("http://img.youtube.com/vi/#{video.youtube_id}/default.jpg"), lesson_video_path(@lesson, video), :class => "lightbox")
                  = link_to(video.title, lesson_video_path(@lesson, video), :class => "lightbox")
                  .small= simple_format(truncate(video.caption, :length => 90))
                  .links.small.clear.right
                    = link_to("edit", edit_lesson_video_path(@lesson, video), :class => "lightbox")
                    &nbsp; &nbsp; &nbsp;
                    = link_to("delete", lesson_video_path(@lesson, video), :method => :delete, :confirm => "Are you sure you want to delete this video?")
              - else
                - photo = media
                .photo_thumbnail
                  = link_to(image_tag(timestamped(photo.image.url(:small), photo)), photo.image.url(:large), :class => "lightbox")
                  = link_to(photo.title, photo.image.url(:large), :class => "lightbox")
                  .small= simple_format(truncate(photo.caption, :length => 90))
                  .links.small.clear.right
                    = link_to("edit", edit_lesson_photo_path(@lesson, photo), :class => "lightbox")
                    &nbsp; &nbsp; &nbsp;
                    = link_to("delete", lesson_photo_path(@lesson, photo), :method => :delete, :confirm => "Are you sure you want to delete this photo/image/drawing?")

        .section
          %h3 Videos
          - if @lesson.videos.empty?
            %p.small You haven't yet added any videos to your lesson.

          = link_to("Add a video to your lesson", new_lesson_video_path(@lesson), :class => "lightbox")

        .section
          %h3 Photos / Images / Drawings
          - if @lesson.photos.empty?
            %p.small You haven't yet added any photos/images/drawings to your lesson.

          = link_to("Add a photo/image/drawing to your lesson", new_lesson_photo_path(@lesson), :class => "lightbox")

        .section
          %h3 Reference Material
          - if @lesson.references.empty?
            .small
              %p You haven't yet added any reference material for your lesson.
              %p What reference material did you find helpful when you were learning what you are now teaching?
          - else
            - @lesson.references.each do |reference|
              .reference_preview
                = link_to(reference.title, reference.url, :target => "_blank")
                .small= simple_format(truncate(reference.comment, :length => 90))
                .links.small.clear.right
                  = link_to("edit", edit_lesson_reference_path(@lesson, reference), :class => "lightbox")
                  &nbsp; &nbsp; &nbsp;
                  = link_to("delete", lesson_reference_path(@lesson, reference), :method => :delete, :confirm => "Are you sure you want to delete this reference material?")

          = link_to("Add reference material for your lesson", new_lesson_reference_path(@lesson), :class => "lightbox")

        .section
          %h3 Next / Previous Lesson
          - if @lesson.lesson_links.empty?
            .small
              %p You haven't yet suggested any lessons that people should view before or after this lesson.
              %p Add any good lesson on Upside Down Academy that people should view before or after this lesson.
          - else
            - @lesson.lesson_links.each do |lesson_link|
              .reference_preview
                .small.clear.right
                  = link_to("edit", edit_lesson_lesson_link_path(@lesson, lesson_link), :class => "lightbox")
                  &nbsp; &nbsp; &nbsp;
                  = link_to("delete", lesson_lesson_link_path(@lesson, lesson_link), :method => :delete, :confirm => "Are you sure you want to delete this lesson link?")
                = link_to(lesson_link.linked_lesson.title, lesson_path(lesson_link.linked_lesson), :target => "_blank")
                = lesson_link.next_lesson? ? "(next)" : "(before)"
          = link_to("Add a lesson to view before or after this lesson", new_lesson_lesson_link_path(@lesson), :class => "lightbox")

    .field
      %h3 Lesson Text
      .small Please write out as much of your lesson as possible, even if you're doing a video.
      %p.small It's easier for people to scan/search text than to scan/search through a video.  
      = f.text_area :body, :class => "monitor_changes", :data => {:val => @lesson.body}, :style => "width: 450px;"

  .actions.clear
    - if @lesson.title.present?
      %p.text_center.small
        (Please remember to save often. We don't yet have a good way to recover your lesson if something goes wrong.)
      %p.text_center= f.submit "Save Lesson"
    - else
      %p= f.submit "Save And Continue"

= render "devise/registrations/short_form" if current_user.nil?
